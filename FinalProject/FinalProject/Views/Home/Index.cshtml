@model FinalProject.Models.ViewModle
@{
	ViewBag.Title = "Home Page";
}
<link rel="stylesheet" href="~/Content/style.css" type="text/css" media="screen" />
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>

<h3>Search:</h3>

@using (Ajax.BeginForm("ProductSearch", "Products",
								new AjaxOptions { HttpMethod = "GET", InsertionMode = InsertionMode.Replace, UpdateTargetId = "searchResults" }))
{
	<dl class="dl-horizontal">

		<dt>
			Product name :
		</dt>

		<dd>
			@Html.TextBox("ProductName", null, new { id = "ProductName" })
		</dd>

		<dt>
			Brand :
		</dt>

		<dd>
			@Html.TextBox("Brand", null, new { id = "Brand" })
		</dd>

		<dt>
			Inches :
		</dt>

		<dd>
			@Html.TextBox("Inches", null, new { id = "Inches" })
		</dd>


	</dl>

	<input type="submit" value="Search" class="btn btn-primary" />
	<hr>
}

@if (Model != null)
{
	@Html.Partial("~/Views/Buys/MostPopular.cshtml");
}

<div id="searchResults">

    @*@Html.Partial("~/Views/Products/ProductSearch.cshtml");*@

    <section class="products">
    
    @foreach (var item in Model.Product)
            {
		<!-- It's likely you'll need to link the card somewhere. You could add a button in the info, link the titles, or even wrap the entire card in an <a href="..."> -->
        <BuyProduct> 
            <div class="product-card">
                <div class="product-image">
                    <img src="@Html.DisplayTextFor(modelItem => item.Image)" width="200" height="150">
                </div>
                <div class="product-info">
                    <h2>@Html.DisplayFor(model => item.ProductName)</h2>
                    <h3>
                        Description - @Html.DisplayFor(model => item.Description)<br>
                        Brand - @Html.DisplayFor(model => item.Brand)<br>
                        Inches - @Html.DisplayFor(model => item.Inches)<br>
                        Resolution - @Html.DisplayFor(model => item.Resolution)<br>
                        RefreshRate - @Html.DisplayFor(model => item.RefreshRate)<br>
                        Panel - @Html.DisplayFor(model => item.Panel)<br>
                        Price - @Html.DisplayFor(model => item.Price)
                    </h3>
                </div>
                <p>
                    <button class="button button1" onclick="location.href='@Url.Action("CreateBuy", "Buys", new { id = @Html.DisplayFor(model => item.ID) })'">BUY!</button>
                </p>
            </div>
            <hr>
        </BuyProduct>
    }
            <!-- more products -->
    
    </section>

    @*-------------------------------------------stock test-----------------------------------------------

    <script>
        var callback = function (_return /* The json returned for yahooapis */) {
            var totalReturned = _return.query.count;
            //OR: var totalReturned = _return.query.results.quote.length;
            for (var i = 0; i < totalReturned; ++i) {
                var stock = _return.query.results.quote[i];
                var symbol = stock.symbol;
                var percent_change = stock.Change_PercentChange;
                var changeRealTime = stock.ChangeRealtime;

            }
        }

        var url = 'http://query.yahooapis.com/v1/public/yql';
        var startDate = '2012-01-01';
        var endDate = '2012-01-08';
        var data = encodeURIComponent('select * from yahoo.finance.historicaldata where symbol in ("YHOO","AAPL","GOOG","MSFT") and startDate = "' + startDate + '" and endDate = "' + endDate + '"');
        $.getJSON(url, 'q=' + data + "&env=http%3A%2F%2Fdatatables.org%2Falltables.env&format=json", callback);

        console.log(data);
    </script>*@
    @*-------------------------------------------stock test-----------------------------------------------*@

</div>

